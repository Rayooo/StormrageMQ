<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/tx
         				http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="true">

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter" />
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql" />
        <property name="logViolation" value="true" />
    </bean>
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
        <property name="dataSourceLogEnabled" value="false" />
        <property name="connectionLogEnabled" value="false" />
        <property name="statementLogEnabled" value="false" />
        <property name="resultSetLogEnabled" value="false" />
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://${database.host}:${database.port}/${database.database}" />
        <property name="username" value="${database.username}" />
        <property name="password" value="${database.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="10"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="15"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 定时对线程池链接进行检查 -->
        <property name="testWhileIdle" value="true"/>
        <!--检查时间 -->
        <property name="timeBetweenEvictionRunsMillis" value="600000"/>
        <!-- 连接时间失效后重连机制 -->
        <property name="validationQuery" value="" />
        <!-- 连接池过滤 -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter" />
                <ref bean="wall-filter" />
                <ref bean="log-filter" />
            </list>
        </property>
    </bean>

    <!-- MyBatis -->
    <bean id="commonSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件,这里的路径主要是target中编译完的路径 -->
        <property name="mapperLocations" value="classpath*:**/mapper/*Mapper.xml" />
    </bean>
    <!-- MyBatis 扫描DAO层 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ray.demo.loginconsumer2.dao" />
        <property name="sqlSessionFactoryBeanName" value="commonSqlSessionFactory" />
    </bean>

    <!-- 事务管理 -->
    <bean id="commonTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 注解式aop拦截配置 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="commonTransactionManager" proxy-target-class="true" />


</beans>